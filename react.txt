REACT Framework JS

Introduction

Qu'est-ce qu'une framework JavaScript ? 

Une framework JavaScript est un ensemble de bibliothèques et d'outils qui facilitent le développement d'applications Web en fournissant des fonctionnalités prêtes à l'emploi. Les frameworks JavaScript sont conçues pour aider les développeurs à créer des sites Web et des applications Web dynamiques et interactives avec des fonctionnalités avancées telles que des contrôles de formulaire, des animations et des widgets. Les frameworks JavaScript sont souvent basés sur des technologies populaires telles que JavaScript, HTML et CSS.


Description

React est une framework JavaScript qui a été crée en 2013 et actuellement l'une des plus utilisées parmi les librairies front-end. Elle peut être utilisée pour créer des applications web, des applications mobiles et des applications hybrides. On peut retrouver plusieurs morceaux de code permettant la réalisation de plateforme web de façon plus rapide. 
Bien que React soit une librairie JS et non un langage à part entière, elle reste tout de même très utilisée dans le développement web.


Avantages

- La création facile d'applications dynamiques: React facilite la création d'applications web dynamiques parce qu'il nécessite moins de codage et offre plus de fonctionnalités, contrairement à JavaScript, où le codage devient souvent complexe très rapidement.

- React utilise le DOM virtuel, créant ainsi des applications web plus rapidement encore une fois.

- Les composants sont les éléments constitutifs de toute application React, et une seule application se compose généralement de plusieurs composants. Ces composants ont leur logique et leurs contrôles, et ils peuvent être réutilisés dans toute l'application, ce qui réduit considérablement le temps de développement de l'application.

- React suit un flux de données unidirectionnel. Cela signifie que lors de la conception d'une application React, les développeurs imbriquent souvent les composants enfants dans les composants parents. Comme les données circulent dans une seule direction, il devient plus facile de déboguer les erreurs et de savoir où se situe un problème dans une application. 

- Il peut être utilisé pour le développement d'applications web et mobiles : Nous savons déjà que React est utilisé pour le développement d'applications web, mais ce n'est pas tout ce qu'il peut faire. Il existe une framework appelée React Native, dérivée de React lui-même, qui est extrêmement populaire et qui est utilisée pour créer des applications mobiles. Donc, en réalité, React peut être utilisé pour créer des applications web et mobiles.

Inconvénients

- La courbe d'apprentissage est assez raide pour les développeurs débutants.

- Les performances peuvent être lentes si la mise en œuvre de React est mal faite.

- React ne fournit pas de solution de niveau supérieur pour construire des composants complexes.

- Les mises à jour fréquentes peuvent entraîner des incohérences et des problèmes de compatibilité avec d'autres bibliothèques.

- React ne fournit pas de fonctionnalité de routage intégrée et nécessite une bibliothèque tierce pour le faire.


- React peut être difficile à tester car il ne fournit pas de fonctionnalités de test intégrées.


Analyse

Pour conclure, la framework React est une librairie avec une philosophie "composant". C'est à dire qu'une page n'est plus vu comme une page mais comme un ensemble de composant. Par conséquent, du côté utilisateur, si une portion de la page web (donc un composant) est amenée à être chargée, c'est uniquement cette partie là qui le sera et non la page entière. 
Ensuite du côté développeur, l'aspect le plus pratique pour moi c'est la réusabilité du composant. On n'a donc pas besoin de recoder quelque chose qui existe déjà. On en déduit alors qu'on peut avoir un gain de temps très conséquent. De plus, la possibilité d'utiliser React Native  pour créer des applications mobiles interactives est réel avantage comparé à d'autres framework. 


